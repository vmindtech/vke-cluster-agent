# Default values for vke-cluster-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: vmindtech/vke-cluster-agent
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  privileged: true

environments:
  ENV: "production"
  APP_NAME: "vke-cluster-agent"
  VERSION: "0.1.0"
  VKE_CLUSTER_ID: "1"
  VKE_PROJECT_ID: "1"
  VKE_IDENTITY_URL: "https://identity.domain.com"
  VKE_APPLICATION_CREDENTIAL_ID: 1
  VKE_APPLICATION_CREDENTIAL_SECRET: ""

namespace: kube-system

resources: 
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: 
- name: dbus-socket
  hostPath:
    path: /var/run/dbus/system_bus_socket
    type: Socket
- name: host-systemd
  hostPath:
    path: /run/systemd/system
    type: Directory
- name: rke2-kubeconfig
  hostPath:
    path: /etc/rancher/rke2/rke2.yaml
    type: File

volumeMounts: 
- name: dbus-socket
  mountPath: /var/run/dbus/system_bus_socket
- name: host-systemd
  mountPath: /run/systemd/system
- name: rke2-kubeconfig
  mountPath: /etc/rancher/rke2/rke2.yaml
  readOnly: true

nodeSelector: {}

tolerations: 
  - effect: NoExecute
    key: CriticalAddonsOnly
    value: "true"
  - effect: NoSchedule
    key: node.cloudprovider.kubernetes.io/uninitialized
    value: "true"

affinity: {}

agent:
  verbosityLevel: "2"

rbac:
  create: true
  nodeExec:
    create: true
    rules:
      - apiGroups: ["", "*"]
        resources: ["nodes", "nodes/proxy"]
        verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
      - apiGroups: [""]
        resources: ["pods/exec"]
        verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
      - apiGroups: ["", "*"]
        resources: ["pods", "pods/*"]
        verbs: ["create", "get", "list", "watch", "update", "patch", "delete"] 